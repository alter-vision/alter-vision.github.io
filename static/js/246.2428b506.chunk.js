"use strict";(self.webpackChunkalter_vision_landing=self.webpackChunkalter_vision_landing||[]).push([[246],{9246:function(e,t,n){n.r(t),n.d(t,{default:function(){return h}});var i={},a=n(5015),o={TimelineEvent:"timeline_TimelineEvent__z9B9E",TimelineEventSideLinePointTimestamp:"timeline_TimelineEventSideLinePointTimestamp__3W-fx",TimelineEventSideLinePointCircle:"timeline_TimelineEventSideLinePointCircle__BHoQH",TimelineEventTitle:"timeline_TimelineEventTitle__vY1+5",TimelineEventContentFade:"timeline_TimelineEventContentFade__Q1cRv",TimelineEventSide:"timeline_TimelineEventSide__PvmAe",TimelineEventSideLine:"timeline_TimelineEventSideLine__e6HCU",TimelineEventSideLinePoint:"timeline_TimelineEventSideLinePoint__6QRcX",TimelineEventContent:"timeline_TimelineEventContent__m+VGv",TimelineEventContentCollapsed:"timeline_TimelineEventContentCollapsed__twEdc",TimelineEventTags:"timeline_TimelineEventTags__7-9o9",TimelineEventTagsTag:"timeline_TimelineEventTagsTag__0PshE"},s=n(4942),r=n(8152),l=n(7313),c=n(6123),m=n.n(c),d=n(6417);var p=function(e){var t,n,i=e.event,a=(0,l.useState)(!0),c=(0,r.Z)(a,2),p=c[0],u=c[1];return(0,d.jsxs)("div",{className:o.TimelineEvent,children:[(0,d.jsx)("div",{className:o.TimelineEventSide,children:(0,d.jsx)("div",{className:o.TimelineEventSideLine,children:(0,d.jsxs)("div",{className:o.TimelineEventSideLinePoint,children:[(0,d.jsx)("div",{className:o.TimelineEventSideLinePointTimestamp,children:i.timestamp}),(0,d.jsx)("div",{className:o.TimelineEventSideLinePointCircle})]})})}),(0,d.jsx)("div",{className:o.TimelineEventTitle,onClick:function(){return u((function(e){return!e}))},children:i.title}),p?(0,d.jsx)("div",{className:o.TimelineEventContentFade,onClick:function(){return u(!1)}}):(0,d.jsx)("div",{}),(0,d.jsx)("div",{className:m()(o.TimelineEventContent,(0,s.Z)({},o.TimelineEventContentCollapsed,p)),children:i.content}),(0,d.jsx)("div",{className:o.TimelineEventTags,children:null===(t=i.tags)||void 0===t||null===(n=t.sort((function(e,t){return e.localeCompare(t)})))||void 0===n?void 0:n.map((function(e){return(0,d.jsx)("span",{className:o.TimelineEventTagsTag,children:e},e)}))})]},i.title)};var u=function(e){var t=e.events;return(0,d.jsx)("div",{className:o.Timeline,children:t.map((function(e){return(0,d.jsx)(p,{event:e},e.title)}))})};var h=function(){return(0,d.jsx)(a.Z,{id:"experience",icon:"carbon:certificate",header:"Experience",className:i.ExperiencePage,children:(0,d.jsx)(u,{events:[{timestamp:"2022-now",title:"Alter.Vision",content:(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)("p",{children:"Our pet-project - no-code platform for creating and using computer vision applications by connecting and parameterizing ready-made components in a visual flow editor."}),(0,d.jsxs)("p",{children:["More details can be found on the website"," ",(0,d.jsx)("a",{href:"https://alter.vision",target:"_blank",rel:"noopener noreferrer",children:"alter.vision"})]})]}),tags:["Golang","React","TypeScript","Python","OpenCV","Tensorflow","Keras","PyTorch","Kubernetes","Firebase","PostgreSQL"]},{timestamp:"2021-now",title:"Private PaaS for IT-development",content:(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)("p",{children:"A platform for standardization of application development and deployment. The platform provides a full cycle of software production from idea to deployment. It includes systems for managing tasks, managing repositories, building and storing artifacts, checking source code for quality and vulnerabilities, deployment and monitoring. In addition, a software integration layer is built on the platform."}),(0,d.jsx)("p",{children:"Kubernetes is using as the runtime. To automate all processes, the GitOps and IaC approaches are used. Self-developed kubernetes operators are used to manage all processes inside the platform."}),(0,d.jsx)("p",{children:"For convenient management of all development cycles we have made the developer portal, which allows you to create new entities, as well as monitor the status of services. Our platform is multi-tenant and can be used by multiple development teams in one company."}),(0,d.jsx)("p",{children:"The platform introduces a standard for both the process of developing and storing code, as well as for its deployment and cross-system integration. HTTP, Kafka, IBM MQ are available for the integration of systems running on the platform, each of the these components is provided as a service and internally monitors and logs any network traffic by Sevice Mesh and self-written traffic analysis adapters."}),(0,d.jsx)("p",{children:"Modern observability (logs, traces, metrics) components are used to monitor health of both the platform itself and the applications running on it. A Single Sing-On (SSO) provider is used for authentication, authorization and providing end-to-end authentication on all layers and components of the platform."}),(0,d.jsx)("p",{children:"Absolutely all technologies used to implement the platform are open-source."})]}),tags:["Golang","Operator Framework","React","TypeScript","GitOps","IaC","Kubernetes","Helm","Helmfile","Flux v2","BuildKit","Calico","Gitlab","Nexus","Sonarqube","Prometheus","Grafana","EFK","Istio","Keycloak","Kafka","IBM MQ","Vault","Jaeger","Redis"]},{timestamp:"2020-2021",title:"Multi-environment CI/CD",content:(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)("p",{children:"Implemented approaches for CI/CD organization in a variety of environments for products with micro-service architecture."}),(0,d.jsx)("p",{children:"A key feature applied to the CI/CD configuration is the DRY principle. The solution includes a system for storing git repositories and a set of premade scripts for implementing continuous integration and deployment of various development stacks,"}),(0,d.jsx)("p",{children:"E. g. Java, Kotlin, React, Angular, Vue, Golang, DotNet, Python, etc. The solution is extensible and allows you to add new technology stacks."}),(0,d.jsx)("p",{children:"Also, in addition to the technical core, a description of the development process is implemented - a single software development standard. Our platform can be used as in-house solution in any enterprise engaged in software development and worried about the safety of its source code."}),(0,d.jsx)("p",{children:"Our system allows you to significantly reduce the costs of software production, reduce the human factor and reduce time to market."})]}),tags:["Golang","GitOps","Docker","ContainerD","Kaniko","BuildKit","Helm","Helmfile","Gitlab","Gitlab CI","Bash","Ansible"]},{timestamp:"2019-2020",title:"Hybrid Cloud Platform",content:(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)("p",{children:"Designing and implementing a pilot of a hybrid cloud platform for hosting public and private services using SaaS/PaaS models, as well as providing platform resources using the IaaS model."}),(0,d.jsx)("p",{children:"In addition to technical implementation, maintenance processes were formulated and an SRE department was created for further maintenance and development of the platform."}),(0,d.jsx)("p",{children:"Despite the pilot status, several real business applications were successfully launched on the platform, and worked within the SLA."})]}),tags:["Linux","OpenNebula","KVM","Kubernetes","SDS: Linstor","DRBD v9","SDN: vxlan","linux bridges"]},{timestamp:"2017-2019",title:"R&D and improvements to open-source solutions",content:(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)("p",{children:"During the work on the projects, various R&D and improvements related to open source software were implemented:"}),(0,d.jsxs)("ul",{children:[(0,d.jsx)("li",{children:"Custom scheduler for Apache Storm, which provides isolation of topology placement by supervisors. It was used in case of Apache Storm deployment in kubernetes environment. Additionally, a library was also implemented for exporting topology handler metrics to Prometheus."}),(0,d.jsx)("li",{children:"Kafka operator, based on the quarkus framework and providing the lifecycle of Kafka cluster resources \u2013 Topic, User, ACL \u2013 in the kubernetes environment."}),(0,d.jsx)("li",{children:"A library for authentication in Kafka topics via Keycloak."}),(0,d.jsx)("li",{children:"Visualization of security groups rules in Opennebula for the information security service, golang."}),(0,d.jsx)("li",{children:"Implementation of VM backups managed by Opennebula and located on a linstor cluster through the hook mechanism."}),(0,d.jsx)("li",{children:"Implementation of the method of registering users by SMS in Keycloak. Using sms as the second factor for authentication in Keycloak."})]})]}),tags:["Apache Storm","Kubernetes","Kafka","Keycloak","R&D","Golang","Opennebula"]},{timestamp:"2018-2020",title:"AML system",content:(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)("p",{children:"Anti-money laundering system embedded in the banking environment and monitoring the continuous flow of bank transactions in real time."}),(0,d.jsx)("p",{children:"The system provides a workplace for a financial monitoring employee in the form of a web application with displayed customer analytics."}),(0,d.jsx)("p",{children:"Displaying aggregates, a graph of customer relationships, payment diagrams by appointment, customer cards. Integration with external systems. The system provided customizable verification rules that could adapt to the legislation or requirements of a particular bank."}),(0,d.jsx)("p",{children:"All rules are configurable and do not require changes to the source code. It also provides for the reproduction of BPMN processes, allowing you to flexibly configure the rules and conditions for checking bank payments and customers."}),(0,d.jsx)("p",{children:"The system has been successfully installed and operated in several large banks to counteract fraudulent schemes."})]}),tags:["Angular","Python","Java","Kotlin","TypeScript","ArangoDB","Camunda BPM","Kafka","Kubernetes","Helm","Helmfile","PostgreSQL","Spring","Clickhouse","Minio","Oracle"]},{timestamp:"2018",title:"Front-office system for automating the loan issuance process",content:(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)("p",{children:"Implementation of an application prototype in the form of a SPA with support for a role model for the roles involved in the loan issuance process, from the user to employees of internal departments."}),(0,d.jsx)("p",{children:"Application routing is provided by using Camunda BPM."})]}),tags:["Java","Angular","Camunda BPM"]},{timestamp:"2018",title:"Automatic registration of applications and complaints",content:(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)("p",{children:"Implementation of the application registration system for a regional operator based on customer requests."}),(0,d.jsx)("p",{children:"Voice menu with automatic recognition of addresses and customer numbers dictated by voice, bringing addresses to a universal format, UI for staff."})]}),tags:["Python","Java","Quarkus","Asterisk","PostgreSQL","Docker","docker-compose","SpeechKit","Dadata API","TypeScript","Angular"]},{timestamp:"2017",title:"Face recognition system",content:(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)("p",{children:"Identification and determination of the gender/age of retail customers for targeting advertising on tablets in checkout areas."}),(0,d.jsx)("p",{children:"Collecting statistics about the audience."})]}),tags:["Python","Tornado","facenet","MTCN","ResNet","Docker","Consul","RabbitMQ","PostgreSQL"]},{timestamp:"2017",title:"Scoring a customer for banking services",content:(0,d.jsx)(d.Fragment,{children:(0,d.jsx)("p",{children:"Checking the client when opening an account for compliance with the law and reliability."})}),tags:["Python","Lightgdm","AIOHTTP","Docker","docker-compose"]},{timestamp:"2017",title:"Classification of the purpose of payment",content:(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)("p",{children:"Classification of the text of the purpose of payment in accordance with the activities of the legal entity."}),(0,d.jsx)("p",{children:"Identification of key entities from the purpose of payment (dates, documents, reasons for transfer, etc.), creation of a system of rules that allow you to specify the mandatory presence of certain entities and their values. For subsequent use in AML systems to identify fraudulent schemes."})]}),tags:["Python","hnswlib","ML","scikit-learn","AIOHTTP","Docker","ArangoDB","pyCRFsuite","Angular","Typescript"]},{timestamp:"2017",title:"Customer segmentation",content:(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)("p",{children:"Segmentation of the customer base by clustering methods, identification of groups similar in customer interests and their visualization."}),(0,d.jsx)("p",{children:"Investigation of customer movement between groups. Building audiences of commercial companies and their clustering."})]}),tags:["Python","DBSCAN","Bokeh"]},{timestamp:"2017",title:"Manufacturing execution system",content:(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)("p",{children:"MES for automation of production process management to small and medium-sized enterprises."}),(0,d.jsx)("p",{children:"Allows you to automate the process from creating an order to selling to the client."})]}),tags:["Java","Spring","Swing","PostgreSQL"]},{timestamp:"2016",title:"ETL for bank reporting",content:(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)("p",{children:"Extract+Transform+Load (ETL) system for collecting data from different sources, transforming and uploading to any destination."}),(0,d.jsx)("p",{children:"Integration of ETL with existing banking systems and automation of manual processes for working with banking data."})]}),tags:["Kotlin","Spring","Docker","Oracle","Clickhouse","docker-compose","Angular"]},{timestamp:"2015-2016",title:"DWH for bank reporting",content:(0,d.jsx)(d.Fragment,{children:(0,d.jsx)("p",{children:"Data Warehouse (DWH) system for accounting banking data from different banking systems for the subsequent formation of mandatory reporting for the state regulator."})}),tags:["Java","Docker","Oracle","Clickhouse","docker-compose","Angular","Python"]},{timestamp:"2012-2015",title:"Automation of bank reporting",content:(0,d.jsx)(d.Fragment,{children:(0,d.jsx)("p",{children:"Implementation of a system for automatic generation of mandatory bank reporting for the state regulator."})}),tags:["Oracle","PLSQL"]}]})})}}}]);